-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from MCParser.y
-----------------------------------------------------------------------------


terminal ':' is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parse -> Stmt                               (0)
	Stmt -> Expression ';' Stmt                        (1)
	Stmt -> Expression ';'                             (2)
	Stmt -> Selection_Stmt Stmt                        (3)
	Stmt -> Iteration_Stmt Stmt                        (4)
	Stmt -> Selection_Stmt                             (5)
	Stmt -> Iteration_Stmt                             (6)
	Selection_Stmt -> if '(' Expression ')' Compound_Stmt else Compound_Stmt   (7)
	Selection_Stmt -> if '(' Expression ')' Compound_Stmt   (8)
	Selection_Stmt -> try Compound_Stmt catch '(' Exception ')' Compound_Stmt   (9)
	Iteration_Stmt -> while '(' Expression ')' Compound_Stmt   (10)
	Compound_Stmt -> '{' Stmt '}'                      (11)
	Expression -> Operation                            (12)
	Expression -> var '=' Expression                   (13)
	Expression -> var '=' unit                         (14)
	Expression -> Type var                             (15)
	Expression -> print Expression                     (16)
	Expression -> consume Expression                   (17)
	Expression -> streams Expression                   (18)
	Expression -> return Expression                    (19)
	Expression -> return unit                          (20)
	Expression -> throw Exception                      (21)
	Expression -> lambda '(' Type var ')' '->' Compound_Stmt   (22)
	Expression -> lambda unit '->' Compound_Stmt       (23)
	Operation -> Operation '+' Operation               (24)
	Operation -> Operation '-' Operation               (25)
	Operation -> Operation '<' Operation               (26)
	Operation -> Operation '<=' Operation              (27)
	Operation -> Operation '>' Operation               (28)
	Operation -> Operation '>=' Operation              (29)
	Operation -> Operation '*' Operation               (30)
	Operation -> Operation '%' Operation               (31)
	Operation -> Operation '/' Operation               (32)
	Operation -> Operation '==' Operation              (33)
	Operation -> Operation '!=' Operation              (34)
	Operation -> Operation '||' Operation              (35)
	Operation -> Operation '&&' Operation              (36)
	Operation -> Operation cons Operation              (37)
	Operation -> '-' Operation                         (38)
	Operation -> '!' Operation                         (39)
	Operation -> tail Operation                        (40)
	Operation -> head Operation                        (41)
	Operation -> isEmpty Operation                     (42)
	Operation -> Exp1                                  (43)
	Exp1 -> Exp1 Exp2                                  (44)
	Exp1 -> Exp1 unit                                  (45)
	Exp1 -> Exp2                                       (46)
	Exp2 -> '(' Expression ')'                         (47)
	Exp2 -> var                                        (48)
	Exp2 -> bool                                       (49)
	Exp2 -> number                                     (50)
	Exp2 -> '[' ']'                                    (51)
	Exception -> NullPointerException                  (52)
	Exception -> StreamsNotInitialisedException        (53)
	Exception -> NotExistingStreamConsumptionException   (54)
	Exception -> DivideByZeroException                 (55)
	Exception -> TrapException                         (56)
	Exception -> ListEmptyException                    (57)
	Type -> boolT                                      (58)
	Type -> intT                                       (59)
	Type -> void                                       (60)
	Type -> unit                                       (61)
	Type -> '[' Type ']'                               (62)
	Type -> Type '->' Type                             (63)
	Type -> '(' Type ')'                               (64)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	if             { MkToken _ TokenIf }
	while          { MkToken _ TokenWhile }
	else           { MkToken _ TokenElse }
	'='            { MkToken _ TokenEq }
	'+'            { MkToken _ TokenAdd }
	'{'            { MkToken _ TokenLCurly }
	'}'            { MkToken _ TokenRCurly }
	'['            { MkToken _ TokenLSquare }
	']'            { MkToken _ TokenRSquare }
	'('            { MkToken _ TokenLParen }
	')'            { MkToken _ TokenRParen }
	':'            { MkToken _ TokenColon }
	';'            { MkToken _ TokenSemiColon }
	'<'            { MkToken _ TokenLessThan }
	'>'            { MkToken _ TokenGreaterThan }
	'<='           { MkToken _ TokenLessThanEq }
	'>='           { MkToken _ TokenGreaterThanEq }
	'=='           { MkToken _ TokenLogicalEq }
	'!='           { MkToken _ TokenNotEq }
	'!'            { MkToken _ TokenLogicalNot }
	'&&'           { MkToken _ TokenLogicalAnd }
	'||'           { MkToken _ TokenLogicalOr }
	'/'            { MkToken _ TokenDivide }
	'*'            { MkToken _ TokenMultiply }
	'-'            { MkToken _ TokenSubtract }
	'%'            { MkToken _ TokenModulo }
	catch          { MkToken _ TokenCatch }
	try            { MkToken _ TokenTry }
	throw          { MkToken _ TokenThrow }
	number         { MkToken _ (TokenNum $$) }
	intT           { MkToken _ TokenTInt }
	bool           { MkToken _ (TokenBool $$) }
	boolT          { MkToken _ TokenTBool }
	void           { MkToken _ TokenVoid }
	var            { MkToken _ (TokenVar $$) }
	print          { MkToken _ TokenPrint }
	head           { MkToken _ TokenHead }
	tail           { MkToken _ TokenTail }
	isEmpty        { MkToken _ TokenIsEmpty }
	cons           { MkToken _ TokenCons }
	consume        { MkToken _ TokenConsume }
	streams        { MkToken _ TokenInitStreams }
	lambda         { MkToken _ TokenLambda }
	'->'           { MkToken _ TokenArrow }
	unit           { MkToken _ TokenUnit }
	return         { MkToken _ TokenReturn }
	NullPointerException{ MkToken _ TokenNPE }
	StreamsNotInitialisedException{ MkToken _ TokenSNIE }
	NotExistingStreamConsumptionException{ MkToken _ TokenNESCE }
	DivideByZeroException{ MkToken _ TokenDBZE }
	TrapException  { MkToken _ TokenTE }
	ListEmptyException{ MkToken _ TokenLEE }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parse    rule  0
	Stmt            rules 1, 2, 3, 4, 5, 6
	Selection_Stmt  rules 7, 8, 9
	Iteration_Stmt  rule  10
	Compound_Stmt   rule  11
	Expression      rules 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
	Operation       rules 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43
	Exp1            rules 44, 45, 46
	Exp2            rules 47, 48, 49, 50, 51
	Exception       rules 52, 53, 54, 55, 56, 57
	Type            rules 58, 59, 60, 61, 62, 63, 64

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	if             shift, and enter state 31
	while          shift, and enter state 32
	'['            shift, and enter state 7
	'('            shift, and enter state 8
	'!'            shift, and enter state 9
	'-'            shift, and enter state 10
	try            shift, and enter state 33
	throw          shift, and enter state 11
	number         shift, and enter state 12
	intT           shift, and enter state 13
	bool           shift, and enter state 14
	boolT          shift, and enter state 15
	void           shift, and enter state 16
	var            shift, and enter state 17
	print          shift, and enter state 18
	head           shift, and enter state 19
	tail           shift, and enter state 20
	isEmpty        shift, and enter state 21
	consume        shift, and enter state 22
	streams        shift, and enter state 23
	lambda         shift, and enter state 24
	unit           shift, and enter state 25
	return         shift, and enter state 26

	Stmt           goto state 27
	Selection_Stmt goto state 28
	Iteration_Stmt goto state 29
	Expression     goto state 30
	Operation      goto state 3
	Exp1           goto state 4
	Exp2           goto state 5
	Type           goto state 6

State 1


	'['            shift, and enter state 7
	'('            shift, and enter state 8
	'!'            shift, and enter state 9
	'-'            shift, and enter state 10
	throw          shift, and enter state 11
	number         shift, and enter state 12
	intT           shift, and enter state 13
	bool           shift, and enter state 14
	boolT          shift, and enter state 15
	void           shift, and enter state 16
	var            shift, and enter state 17
	print          shift, and enter state 18
	head           shift, and enter state 19
	tail           shift, and enter state 20
	isEmpty        shift, and enter state 21
	consume        shift, and enter state 22
	streams        shift, and enter state 23
	lambda         shift, and enter state 24
	unit           shift, and enter state 25
	return         shift, and enter state 26

	Expression     goto state 2
	Operation      goto state 3
	Exp1           goto state 4
	Exp2           goto state 5
	Type           goto state 6

State 2

	Stmt -> Expression . ';' Stmt                       (rule 1)

	';'            shift, and enter state 88


State 3

	Expression -> Operation .                           (rule 12)
	Operation -> Operation . '+' Operation              (rule 24)
	Operation -> Operation . '-' Operation              (rule 25)
	Operation -> Operation . '<' Operation              (rule 26)
	Operation -> Operation . '<=' Operation             (rule 27)
	Operation -> Operation . '>' Operation              (rule 28)
	Operation -> Operation . '>=' Operation             (rule 29)
	Operation -> Operation . '*' Operation              (rule 30)
	Operation -> Operation . '%' Operation              (rule 31)
	Operation -> Operation . '/' Operation              (rule 32)
	Operation -> Operation . '==' Operation             (rule 33)
	Operation -> Operation . '!=' Operation             (rule 34)
	Operation -> Operation . '||' Operation             (rule 35)
	Operation -> Operation . '&&' Operation             (rule 36)
	Operation -> Operation . cons Operation             (rule 37)

	'+'            shift, and enter state 74
	')'            reduce using rule 12
	';'            reduce using rule 12
	'<'            shift, and enter state 75
	'>'            shift, and enter state 76
	'<='           shift, and enter state 77
	'>='           shift, and enter state 78
	'=='           shift, and enter state 79
	'!='           shift, and enter state 80
	'&&'           shift, and enter state 81
	'||'           shift, and enter state 82
	'/'            shift, and enter state 83
	'*'            shift, and enter state 84
	'-'            shift, and enter state 85
	'%'            shift, and enter state 86
	cons           shift, and enter state 87


State 4

	Operation -> Exp1 .                                 (rule 43)
	Exp1 -> Exp1 . Exp2                                 (rule 44)
	Exp1 -> Exp1 . unit                                 (rule 45)

	'+'            reduce using rule 43
	'['            shift, and enter state 48
	'('            shift, and enter state 49
	')'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'>'            reduce using rule 43
	'<='           reduce using rule 43
	'>='           reduce using rule 43
	'=='           reduce using rule 43
	'!='           reduce using rule 43
	'&&'           reduce using rule 43
	'||'           reduce using rule 43
	'/'            reduce using rule 43
	'*'            reduce using rule 43
	'-'            reduce using rule 43
	'%'            reduce using rule 43
	number         shift, and enter state 12
	bool           shift, and enter state 14
	var            shift, and enter state 50
	cons           reduce using rule 43
	unit           shift, and enter state 73

	Exp2           goto state 72

State 5

	Exp1 -> Exp2 .                                      (rule 46)

	'+'            reduce using rule 46
	'['            reduce using rule 46
	'('            reduce using rule 46
	')'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'>'            reduce using rule 46
	'<='           reduce using rule 46
	'>='           reduce using rule 46
	'=='           reduce using rule 46
	'!='           reduce using rule 46
	'&&'           reduce using rule 46
	'||'           reduce using rule 46
	'/'            reduce using rule 46
	'*'            reduce using rule 46
	'-'            reduce using rule 46
	'%'            reduce using rule 46
	number         reduce using rule 46
	bool           reduce using rule 46
	var            reduce using rule 46
	cons           reduce using rule 46
	unit           reduce using rule 46


State 6

	Expression -> Type . var                            (rule 15)
	Type -> Type . '->' Type                            (rule 63)

	var            shift, and enter state 70
	'->'           shift, and enter state 71


State 7

	Exp2 -> '[' . ']'                                   (rule 51)
	Type -> '[' . Type ']'                              (rule 62)

	'['            shift, and enter state 67
	']'            shift, and enter state 68
	'('            shift, and enter state 69
	intT           shift, and enter state 13
	boolT          shift, and enter state 15
	void           shift, and enter state 16
	unit           shift, and enter state 25

	Type           goto state 66

State 8

	Exp2 -> '(' . Expression ')'                        (rule 47)
	Type -> '(' . Type ')'                              (rule 64)

	'['            shift, and enter state 7
	'('            shift, and enter state 8
	'!'            shift, and enter state 9
	'-'            shift, and enter state 10
	throw          shift, and enter state 11
	number         shift, and enter state 12
	intT           shift, and enter state 13
	bool           shift, and enter state 14
	boolT          shift, and enter state 15
	void           shift, and enter state 16
	var            shift, and enter state 17
	print          shift, and enter state 18
	head           shift, and enter state 19
	tail           shift, and enter state 20
	isEmpty        shift, and enter state 21
	consume        shift, and enter state 22
	streams        shift, and enter state 23
	lambda         shift, and enter state 24
	unit           shift, and enter state 25
	return         shift, and enter state 26

	Expression     goto state 64
	Operation      goto state 3
	Exp1           goto state 4
	Exp2           goto state 5
	Type           goto state 65

State 9

	Operation -> '!' . Operation                        (rule 39)

	'['            shift, and enter state 48
	'('            shift, and enter state 49
	'!'            shift, and enter state 9
	'-'            shift, and enter state 10
	number         shift, and enter state 12
	bool           shift, and enter state 14
	var            shift, and enter state 50
	head           shift, and enter state 19
	tail           shift, and enter state 20
	isEmpty        shift, and enter state 21

	Operation      goto state 63
	Exp1           goto state 4
	Exp2           goto state 5

State 10

	Operation -> '-' . Operation                        (rule 38)

	'['            shift, and enter state 48
	'('            shift, and enter state 49
	'!'            shift, and enter state 9
	'-'            shift, and enter state 10
	number         shift, and enter state 12
	bool           shift, and enter state 14
	var            shift, and enter state 50
	head           shift, and enter state 19
	tail           shift, and enter state 20
	isEmpty        shift, and enter state 21

	Operation      goto state 62
	Exp1           goto state 4
	Exp2           goto state 5

State 11

	Expression -> throw . Exception                     (rule 21)

	NullPointerExceptionshift, and enter state 56
	StreamsNotInitialisedExceptionshift, and enter state 57
	NotExistingStreamConsumptionExceptionshift, and enter state 58
	DivideByZeroExceptionshift, and enter state 59
	TrapException  shift, and enter state 60
	ListEmptyExceptionshift, and enter state 61

	Exception      goto state 55

State 12

	Exp2 -> number .                                    (rule 50)

	'+'            reduce using rule 50
	'['            reduce using rule 50
	'('            reduce using rule 50
	')'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'>'            reduce using rule 50
	'<='           reduce using rule 50
	'>='           reduce using rule 50
	'=='           reduce using rule 50
	'!='           reduce using rule 50
	'&&'           reduce using rule 50
	'||'           reduce using rule 50
	'/'            reduce using rule 50
	'*'            reduce using rule 50
	'-'            reduce using rule 50
	'%'            reduce using rule 50
	number         reduce using rule 50
	bool           reduce using rule 50
	var            reduce using rule 50
	cons           reduce using rule 50
	unit           reduce using rule 50


State 13

	Type -> intT .                                      (rule 59)

	']'            reduce using rule 59
	')'            reduce using rule 59
	var            reduce using rule 59
	'->'           reduce using rule 59


State 14

	Exp2 -> bool .                                      (rule 49)

	'+'            reduce using rule 49
	'['            reduce using rule 49
	'('            reduce using rule 49
	')'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'>'            reduce using rule 49
	'<='           reduce using rule 49
	'>='           reduce using rule 49
	'=='           reduce using rule 49
	'!='           reduce using rule 49
	'&&'           reduce using rule 49
	'||'           reduce using rule 49
	'/'            reduce using rule 49
	'*'            reduce using rule 49
	'-'            reduce using rule 49
	'%'            reduce using rule 49
	number         reduce using rule 49
	bool           reduce using rule 49
	var            reduce using rule 49
	cons           reduce using rule 49
	unit           reduce using rule 49


State 15

	Type -> boolT .                                     (rule 58)

	']'            reduce using rule 58
	')'            reduce using rule 58
	var            reduce using rule 58
	'->'           reduce using rule 58


State 16

	Type -> void .                                      (rule 60)

	']'            reduce using rule 60
	')'            reduce using rule 60
	var            reduce using rule 60
	'->'           reduce using rule 60


State 17

	Expression -> var . '=' Expression                  (rule 13)
	Expression -> var . '=' unit                        (rule 14)
	Exp2 -> var .                                       (rule 48)

	'='            shift, and enter state 54
	'+'            reduce using rule 48
	'['            reduce using rule 48
	'('            reduce using rule 48
	')'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'>'            reduce using rule 48
	'<='           reduce using rule 48
	'>='           reduce using rule 48
	'=='           reduce using rule 48
	'!='           reduce using rule 48
	'&&'           reduce using rule 48
	'||'           reduce using rule 48
	'/'            reduce using rule 48
	'*'            reduce using rule 48
	'-'            reduce using rule 48
	'%'            reduce using rule 48
	number         reduce using rule 48
	bool           reduce using rule 48
	var            reduce using rule 48
	cons           reduce using rule 48
	unit           reduce using rule 48


State 18

	Expression -> print . Expression                    (rule 16)

	'['            shift, and enter state 7
	'('            shift, and enter state 8
	'!'            shift, and enter state 9
	'-'            shift, and enter state 10
	throw          shift, and enter state 11
	number         shift, and enter state 12
	intT           shift, and enter state 13
	bool           shift, and enter state 14
	boolT          shift, and enter state 15
	void           shift, and enter state 16
	var            shift, and enter state 17
	print          shift, and enter state 18
	head           shift, and enter state 19
	tail           shift, and enter state 20
	isEmpty        shift, and enter state 21
	consume        shift, and enter state 22
	streams        shift, and enter state 23
	lambda         shift, and enter state 24
	unit           shift, and enter state 25
	return         shift, and enter state 26

	Expression     goto state 53
	Operation      goto state 3
	Exp1           goto state 4
	Exp2           goto state 5
	Type           goto state 6

State 19

	Operation -> head . Operation                       (rule 41)

	'['            shift, and enter state 48
	'('            shift, and enter state 49
	'!'            shift, and enter state 9
	'-'            shift, and enter state 10
	number         shift, and enter state 12
	bool           shift, and enter state 14
	var            shift, and enter state 50
	head           shift, and enter state 19
	tail           shift, and enter state 20
	isEmpty        shift, and enter state 21

	Operation      goto state 52
	Exp1           goto state 4
	Exp2           goto state 5

State 20

	Operation -> tail . Operation                       (rule 40)

	'['            shift, and enter state 48
	'('            shift, and enter state 49
	'!'            shift, and enter state 9
	'-'            shift, and enter state 10
	number         shift, and enter state 12
	bool           shift, and enter state 14
	var            shift, and enter state 50
	head           shift, and enter state 19
	tail           shift, and enter state 20
	isEmpty        shift, and enter state 21

	Operation      goto state 51
	Exp1           goto state 4
	Exp2           goto state 5

State 21

	Operation -> isEmpty . Operation                    (rule 42)

	'['            shift, and enter state 48
	'('            shift, and enter state 49
	'!'            shift, and enter state 9
	'-'            shift, and enter state 10
	number         shift, and enter state 12
	bool           shift, and enter state 14
	var            shift, and enter state 50
	head           shift, and enter state 19
	tail           shift, and enter state 20
	isEmpty        shift, and enter state 21

	Operation      goto state 47
	Exp1           goto state 4
	Exp2           goto state 5

State 22

	Expression -> consume . Expression                  (rule 17)

	'['            shift, and enter state 7
	'('            shift, and enter state 8
	'!'            shift, and enter state 9
	'-'            shift, and enter state 10
	throw          shift, and enter state 11
	number         shift, and enter state 12
	intT           shift, and enter state 13
	bool           shift, and enter state 14
	boolT          shift, and enter state 15
	void           shift, and enter state 16
	var            shift, and enter state 17
	print          shift, and enter state 18
	head           shift, and enter state 19
	tail           shift, and enter state 20
	isEmpty        shift, and enter state 21
	consume        shift, and enter state 22
	streams        shift, and enter state 23
	lambda         shift, and enter state 24
	unit           shift, and enter state 25
	return         shift, and enter state 26

	Expression     goto state 46
	Operation      goto state 3
	Exp1           goto state 4
	Exp2           goto state 5
	Type           goto state 6

State 23

	Expression -> streams . Expression                  (rule 18)

	'['            shift, and enter state 7
	'('            shift, and enter state 8
	'!'            shift, and enter state 9
	'-'            shift, and enter state 10
	throw          shift, and enter state 11
	number         shift, and enter state 12
	intT           shift, and enter state 13
	bool           shift, and enter state 14
	boolT          shift, and enter state 15
	void           shift, and enter state 16
	var            shift, and enter state 17
	print          shift, and enter state 18
	head           shift, and enter state 19
	tail           shift, and enter state 20
	isEmpty        shift, and enter state 21
	consume        shift, and enter state 22
	streams        shift, and enter state 23
	lambda         shift, and enter state 24
	unit           shift, and enter state 25
	return         shift, and enter state 26

	Expression     goto state 45
	Operation      goto state 3
	Exp1           goto state 4
	Exp2           goto state 5
	Type           goto state 6

State 24

	Expression -> lambda . '(' Type var ')' '->' Compound_Stmt    (rule 22)
	Expression -> lambda . unit '->' Compound_Stmt      (rule 23)

	'('            shift, and enter state 43
	unit           shift, and enter state 44


State 25

	Type -> unit .                                      (rule 61)

	']'            reduce using rule 61
	')'            reduce using rule 61
	var            reduce using rule 61
	'->'           reduce using rule 61


State 26

	Expression -> return . Expression                   (rule 19)
	Expression -> return . unit                         (rule 20)

	'['            shift, and enter state 7
	'('            shift, and enter state 8
	'!'            shift, and enter state 9
	'-'            shift, and enter state 10
	throw          shift, and enter state 11
	number         shift, and enter state 12
	intT           shift, and enter state 13
	bool           shift, and enter state 14
	boolT          shift, and enter state 15
	void           shift, and enter state 16
	var            shift, and enter state 17
	print          shift, and enter state 18
	head           shift, and enter state 19
	tail           shift, and enter state 20
	isEmpty        shift, and enter state 21
	consume        shift, and enter state 22
	streams        shift, and enter state 23
	lambda         shift, and enter state 24
	unit           shift, and enter state 42
	return         shift, and enter state 26

	Expression     goto state 41
	Operation      goto state 3
	Exp1           goto state 4
	Exp2           goto state 5
	Type           goto state 6

State 27

	%start_parse -> Stmt .                              (rule 0)

	%eof           accept


State 28

	Stmt -> Selection_Stmt . Stmt                       (rule 3)
	Stmt -> Selection_Stmt .                            (rule 5)

	if             shift, and enter state 31
	while          shift, and enter state 32
	'}'            reduce using rule 5
	'['            shift, and enter state 7
	'('            shift, and enter state 8
	'!'            shift, and enter state 9
	'-'            shift, and enter state 10
	try            shift, and enter state 33
	throw          shift, and enter state 11
	number         shift, and enter state 12
	intT           shift, and enter state 13
	bool           shift, and enter state 14
	boolT          shift, and enter state 15
	void           shift, and enter state 16
	var            shift, and enter state 17
	print          shift, and enter state 18
	head           shift, and enter state 19
	tail           shift, and enter state 20
	isEmpty        shift, and enter state 21
	consume        shift, and enter state 22
	streams        shift, and enter state 23
	lambda         shift, and enter state 24
	unit           shift, and enter state 25
	return         shift, and enter state 26
	%eof           reduce using rule 5

	Stmt           goto state 40
	Selection_Stmt goto state 28
	Iteration_Stmt goto state 29
	Expression     goto state 30
	Operation      goto state 3
	Exp1           goto state 4
	Exp2           goto state 5
	Type           goto state 6

State 29

	Stmt -> Iteration_Stmt . Stmt                       (rule 4)
	Stmt -> Iteration_Stmt .                            (rule 6)

	if             shift, and enter state 31
	while          shift, and enter state 32
	'}'            reduce using rule 6
	'['            shift, and enter state 7
	'('            shift, and enter state 8
	'!'            shift, and enter state 9
	'-'            shift, and enter state 10
	try            shift, and enter state 33
	throw          shift, and enter state 11
	number         shift, and enter state 12
	intT           shift, and enter state 13
	bool           shift, and enter state 14
	boolT          shift, and enter state 15
	void           shift, and enter state 16
	var            shift, and enter state 17
	print          shift, and enter state 18
	head           shift, and enter state 19
	tail           shift, and enter state 20
	isEmpty        shift, and enter state 21
	consume        shift, and enter state 22
	streams        shift, and enter state 23
	lambda         shift, and enter state 24
	unit           shift, and enter state 25
	return         shift, and enter state 26
	%eof           reduce using rule 6

	Stmt           goto state 39
	Selection_Stmt goto state 28
	Iteration_Stmt goto state 29
	Expression     goto state 30
	Operation      goto state 3
	Exp1           goto state 4
	Exp2           goto state 5
	Type           goto state 6

State 30

	Stmt -> Expression . ';' Stmt                       (rule 1)
	Stmt -> Expression . ';'                            (rule 2)

	';'            shift, and enter state 38


State 31

	Selection_Stmt -> if . '(' Expression ')' Compound_Stmt else Compound_Stmt    (rule 7)
	Selection_Stmt -> if . '(' Expression ')' Compound_Stmt    (rule 8)

	'('            shift, and enter state 37


State 32

	Iteration_Stmt -> while . '(' Expression ')' Compound_Stmt    (rule 10)

	'('            shift, and enter state 36


State 33

	Selection_Stmt -> try . Compound_Stmt catch '(' Exception ')' Compound_Stmt    (rule 9)

	'{'            shift, and enter state 35

	Compound_Stmt  goto state 34

State 34

	Selection_Stmt -> try Compound_Stmt . catch '(' Exception ')' Compound_Stmt    (rule 9)

	catch          shift, and enter state 116


State 35

	Compound_Stmt -> '{' . Stmt '}'                     (rule 11)

	if             shift, and enter state 31
	while          shift, and enter state 32
	'['            shift, and enter state 7
	'('            shift, and enter state 8
	'!'            shift, and enter state 9
	'-'            shift, and enter state 10
	try            shift, and enter state 33
	throw          shift, and enter state 11
	number         shift, and enter state 12
	intT           shift, and enter state 13
	bool           shift, and enter state 14
	boolT          shift, and enter state 15
	void           shift, and enter state 16
	var            shift, and enter state 17
	print          shift, and enter state 18
	head           shift, and enter state 19
	tail           shift, and enter state 20
	isEmpty        shift, and enter state 21
	consume        shift, and enter state 22
	streams        shift, and enter state 23
	lambda         shift, and enter state 24
	unit           shift, and enter state 25
	return         shift, and enter state 26

	Stmt           goto state 115
	Selection_Stmt goto state 28
	Iteration_Stmt goto state 29
	Expression     goto state 30
	Operation      goto state 3
	Exp1           goto state 4
	Exp2           goto state 5
	Type           goto state 6

State 36

	Iteration_Stmt -> while '(' . Expression ')' Compound_Stmt    (rule 10)

	'['            shift, and enter state 7
	'('            shift, and enter state 8
	'!'            shift, and enter state 9
	'-'            shift, and enter state 10
	throw          shift, and enter state 11
	number         shift, and enter state 12
	intT           shift, and enter state 13
	bool           shift, and enter state 14
	boolT          shift, and enter state 15
	void           shift, and enter state 16
	var            shift, and enter state 17
	print          shift, and enter state 18
	head           shift, and enter state 19
	tail           shift, and enter state 20
	isEmpty        shift, and enter state 21
	consume        shift, and enter state 22
	streams        shift, and enter state 23
	lambda         shift, and enter state 24
	unit           shift, and enter state 25
	return         shift, and enter state 26

	Expression     goto state 114
	Operation      goto state 3
	Exp1           goto state 4
	Exp2           goto state 5
	Type           goto state 6

State 37

	Selection_Stmt -> if '(' . Expression ')' Compound_Stmt else Compound_Stmt    (rule 7)
	Selection_Stmt -> if '(' . Expression ')' Compound_Stmt    (rule 8)

	'['            shift, and enter state 7
	'('            shift, and enter state 8
	'!'            shift, and enter state 9
	'-'            shift, and enter state 10
	throw          shift, and enter state 11
	number         shift, and enter state 12
	intT           shift, and enter state 13
	bool           shift, and enter state 14
	boolT          shift, and enter state 15
	void           shift, and enter state 16
	var            shift, and enter state 17
	print          shift, and enter state 18
	head           shift, and enter state 19
	tail           shift, and enter state 20
	isEmpty        shift, and enter state 21
	consume        shift, and enter state 22
	streams        shift, and enter state 23
	lambda         shift, and enter state 24
	unit           shift, and enter state 25
	return         shift, and enter state 26

	Expression     goto state 113
	Operation      goto state 3
	Exp1           goto state 4
	Exp2           goto state 5
	Type           goto state 6

State 38

	Stmt -> Expression ';' . Stmt                       (rule 1)
	Stmt -> Expression ';' .                            (rule 2)

	if             shift, and enter state 31
	while          shift, and enter state 32
	'}'            reduce using rule 2
	'['            shift, and enter state 7
	'('            shift, and enter state 8
	'!'            shift, and enter state 9
	'-'            shift, and enter state 10
	try            shift, and enter state 33
	throw          shift, and enter state 11
	number         shift, and enter state 12
	intT           shift, and enter state 13
	bool           shift, and enter state 14
	boolT          shift, and enter state 15
	void           shift, and enter state 16
	var            shift, and enter state 17
	print          shift, and enter state 18
	head           shift, and enter state 19
	tail           shift, and enter state 20
	isEmpty        shift, and enter state 21
	consume        shift, and enter state 22
	streams        shift, and enter state 23
	lambda         shift, and enter state 24
	unit           shift, and enter state 25
	return         shift, and enter state 26
	%eof           reduce using rule 2

	Stmt           goto state 89
	Selection_Stmt goto state 28
	Iteration_Stmt goto state 29
	Expression     goto state 30
	Operation      goto state 3
	Exp1           goto state 4
	Exp2           goto state 5
	Type           goto state 6

State 39

	Stmt -> Iteration_Stmt Stmt .                       (rule 4)

	'}'            reduce using rule 4
	%eof           reduce using rule 4


State 40

	Stmt -> Selection_Stmt Stmt .                       (rule 3)

	'}'            reduce using rule 3
	%eof           reduce using rule 3


State 41

	Expression -> return Expression .                   (rule 19)

	')'            reduce using rule 19
	';'            reduce using rule 19


State 42

	Expression -> return unit .                         (rule 20)
	Type -> unit .                                      (rule 61)

	')'            reduce using rule 20
	';'            reduce using rule 20
	var            reduce using rule 61
	'->'           reduce using rule 61


State 43

	Expression -> lambda '(' . Type var ')' '->' Compound_Stmt    (rule 22)

	'['            shift, and enter state 67
	'('            shift, and enter state 69
	intT           shift, and enter state 13
	boolT          shift, and enter state 15
	void           shift, and enter state 16
	unit           shift, and enter state 25

	Type           goto state 112

State 44

	Expression -> lambda unit . '->' Compound_Stmt      (rule 23)

	'->'           shift, and enter state 111


State 45

	Expression -> streams Expression .                  (rule 18)

	')'            reduce using rule 18
	';'            reduce using rule 18


State 46

	Expression -> consume Expression .                  (rule 17)

	')'            reduce using rule 17
	';'            reduce using rule 17


State 47

	Operation -> Operation . '+' Operation              (rule 24)
	Operation -> Operation . '-' Operation              (rule 25)
	Operation -> Operation . '<' Operation              (rule 26)
	Operation -> Operation . '<=' Operation             (rule 27)
	Operation -> Operation . '>' Operation              (rule 28)
	Operation -> Operation . '>=' Operation             (rule 29)
	Operation -> Operation . '*' Operation              (rule 30)
	Operation -> Operation . '%' Operation              (rule 31)
	Operation -> Operation . '/' Operation              (rule 32)
	Operation -> Operation . '==' Operation             (rule 33)
	Operation -> Operation . '!=' Operation             (rule 34)
	Operation -> Operation . '||' Operation             (rule 35)
	Operation -> Operation . '&&' Operation             (rule 36)
	Operation -> Operation . cons Operation             (rule 37)
	Operation -> isEmpty Operation .                    (rule 42)

	'+'            reduce using rule 42
	')'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'>'            reduce using rule 42
	'<='           reduce using rule 42
	'>='           reduce using rule 42
	'=='           reduce using rule 42
	'!='           reduce using rule 42
	'&&'           reduce using rule 42
	'||'           reduce using rule 42
	'/'            reduce using rule 42
	'*'            reduce using rule 42
	'-'            reduce using rule 42
	'%'            reduce using rule 42
	cons           reduce using rule 42


State 48

	Exp2 -> '[' . ']'                                   (rule 51)

	']'            shift, and enter state 68


State 49

	Exp2 -> '(' . Expression ')'                        (rule 47)

	'['            shift, and enter state 7
	'('            shift, and enter state 8
	'!'            shift, and enter state 9
	'-'            shift, and enter state 10
	throw          shift, and enter state 11
	number         shift, and enter state 12
	intT           shift, and enter state 13
	bool           shift, and enter state 14
	boolT          shift, and enter state 15
	void           shift, and enter state 16
	var            shift, and enter state 17
	print          shift, and enter state 18
	head           shift, and enter state 19
	tail           shift, and enter state 20
	isEmpty        shift, and enter state 21
	consume        shift, and enter state 22
	streams        shift, and enter state 23
	lambda         shift, and enter state 24
	unit           shift, and enter state 25
	return         shift, and enter state 26

	Expression     goto state 64
	Operation      goto state 3
	Exp1           goto state 4
	Exp2           goto state 5
	Type           goto state 6

State 50

	Exp2 -> var .                                       (rule 48)

	'+'            reduce using rule 48
	'['            reduce using rule 48
	'('            reduce using rule 48
	')'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'>'            reduce using rule 48
	'<='           reduce using rule 48
	'>='           reduce using rule 48
	'=='           reduce using rule 48
	'!='           reduce using rule 48
	'&&'           reduce using rule 48
	'||'           reduce using rule 48
	'/'            reduce using rule 48
	'*'            reduce using rule 48
	'-'            reduce using rule 48
	'%'            reduce using rule 48
	number         reduce using rule 48
	bool           reduce using rule 48
	var            reduce using rule 48
	cons           reduce using rule 48
	unit           reduce using rule 48


State 51

	Operation -> Operation . '+' Operation              (rule 24)
	Operation -> Operation . '-' Operation              (rule 25)
	Operation -> Operation . '<' Operation              (rule 26)
	Operation -> Operation . '<=' Operation             (rule 27)
	Operation -> Operation . '>' Operation              (rule 28)
	Operation -> Operation . '>=' Operation             (rule 29)
	Operation -> Operation . '*' Operation              (rule 30)
	Operation -> Operation . '%' Operation              (rule 31)
	Operation -> Operation . '/' Operation              (rule 32)
	Operation -> Operation . '==' Operation             (rule 33)
	Operation -> Operation . '!=' Operation             (rule 34)
	Operation -> Operation . '||' Operation             (rule 35)
	Operation -> Operation . '&&' Operation             (rule 36)
	Operation -> Operation . cons Operation             (rule 37)
	Operation -> tail Operation .                       (rule 40)

	'+'            reduce using rule 40
	')'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'>'            reduce using rule 40
	'<='           reduce using rule 40
	'>='           reduce using rule 40
	'=='           reduce using rule 40
	'!='           reduce using rule 40
	'&&'           reduce using rule 40
	'||'           reduce using rule 40
	'/'            reduce using rule 40
	'*'            reduce using rule 40
	'-'            reduce using rule 40
	'%'            reduce using rule 40
	cons           reduce using rule 40


State 52

	Operation -> Operation . '+' Operation              (rule 24)
	Operation -> Operation . '-' Operation              (rule 25)
	Operation -> Operation . '<' Operation              (rule 26)
	Operation -> Operation . '<=' Operation             (rule 27)
	Operation -> Operation . '>' Operation              (rule 28)
	Operation -> Operation . '>=' Operation             (rule 29)
	Operation -> Operation . '*' Operation              (rule 30)
	Operation -> Operation . '%' Operation              (rule 31)
	Operation -> Operation . '/' Operation              (rule 32)
	Operation -> Operation . '==' Operation             (rule 33)
	Operation -> Operation . '!=' Operation             (rule 34)
	Operation -> Operation . '||' Operation             (rule 35)
	Operation -> Operation . '&&' Operation             (rule 36)
	Operation -> Operation . cons Operation             (rule 37)
	Operation -> head Operation .                       (rule 41)

	'+'            reduce using rule 41
	')'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'>'            reduce using rule 41
	'<='           reduce using rule 41
	'>='           reduce using rule 41
	'=='           reduce using rule 41
	'!='           reduce using rule 41
	'&&'           reduce using rule 41
	'||'           reduce using rule 41
	'/'            reduce using rule 41
	'*'            reduce using rule 41
	'-'            reduce using rule 41
	'%'            reduce using rule 41
	cons           reduce using rule 41


State 53

	Expression -> print Expression .                    (rule 16)

	')'            reduce using rule 16
	';'            reduce using rule 16


State 54

	Expression -> var '=' . Expression                  (rule 13)
	Expression -> var '=' . unit                        (rule 14)

	'['            shift, and enter state 7
	'('            shift, and enter state 8
	'!'            shift, and enter state 9
	'-'            shift, and enter state 10
	throw          shift, and enter state 11
	number         shift, and enter state 12
	intT           shift, and enter state 13
	bool           shift, and enter state 14
	boolT          shift, and enter state 15
	void           shift, and enter state 16
	var            shift, and enter state 17
	print          shift, and enter state 18
	head           shift, and enter state 19
	tail           shift, and enter state 20
	isEmpty        shift, and enter state 21
	consume        shift, and enter state 22
	streams        shift, and enter state 23
	lambda         shift, and enter state 24
	unit           shift, and enter state 110
	return         shift, and enter state 26

	Expression     goto state 109
	Operation      goto state 3
	Exp1           goto state 4
	Exp2           goto state 5
	Type           goto state 6

State 55

	Expression -> throw Exception .                     (rule 21)

	')'            reduce using rule 21
	';'            reduce using rule 21


State 56

	Exception -> NullPointerException .                 (rule 52)

	')'            reduce using rule 52
	';'            reduce using rule 52


State 57

	Exception -> StreamsNotInitialisedException .       (rule 53)

	')'            reduce using rule 53
	';'            reduce using rule 53


State 58

	Exception -> NotExistingStreamConsumptionException .    (rule 54)

	')'            reduce using rule 54
	';'            reduce using rule 54


State 59

	Exception -> DivideByZeroException .                (rule 55)

	')'            reduce using rule 55
	';'            reduce using rule 55


State 60

	Exception -> TrapException .                        (rule 56)

	')'            reduce using rule 56
	';'            reduce using rule 56


State 61

	Exception -> ListEmptyException .                   (rule 57)

	')'            reduce using rule 57
	';'            reduce using rule 57


State 62

	Operation -> Operation . '+' Operation              (rule 24)
	Operation -> Operation . '-' Operation              (rule 25)
	Operation -> Operation . '<' Operation              (rule 26)
	Operation -> Operation . '<=' Operation             (rule 27)
	Operation -> Operation . '>' Operation              (rule 28)
	Operation -> Operation . '>=' Operation             (rule 29)
	Operation -> Operation . '*' Operation              (rule 30)
	Operation -> Operation . '%' Operation              (rule 31)
	Operation -> Operation . '/' Operation              (rule 32)
	Operation -> Operation . '==' Operation             (rule 33)
	Operation -> Operation . '!=' Operation             (rule 34)
	Operation -> Operation . '||' Operation             (rule 35)
	Operation -> Operation . '&&' Operation             (rule 36)
	Operation -> Operation . cons Operation             (rule 37)
	Operation -> '-' Operation .                        (rule 38)

	'+'            reduce using rule 38
	')'            reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'>'            reduce using rule 38
	'<='           reduce using rule 38
	'>='           reduce using rule 38
	'=='           reduce using rule 38
	'!='           reduce using rule 38
	'&&'           reduce using rule 38
	'||'           reduce using rule 38
	'/'            reduce using rule 38
	'*'            reduce using rule 38
	'-'            reduce using rule 38
	'%'            reduce using rule 38
	cons           reduce using rule 38


State 63

	Operation -> Operation . '+' Operation              (rule 24)
	Operation -> Operation . '-' Operation              (rule 25)
	Operation -> Operation . '<' Operation              (rule 26)
	Operation -> Operation . '<=' Operation             (rule 27)
	Operation -> Operation . '>' Operation              (rule 28)
	Operation -> Operation . '>=' Operation             (rule 29)
	Operation -> Operation . '*' Operation              (rule 30)
	Operation -> Operation . '%' Operation              (rule 31)
	Operation -> Operation . '/' Operation              (rule 32)
	Operation -> Operation . '==' Operation             (rule 33)
	Operation -> Operation . '!=' Operation             (rule 34)
	Operation -> Operation . '||' Operation             (rule 35)
	Operation -> Operation . '&&' Operation             (rule 36)
	Operation -> Operation . cons Operation             (rule 37)
	Operation -> '!' Operation .                        (rule 39)

	'+'            reduce using rule 39
	')'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'>'            reduce using rule 39
	'<='           reduce using rule 39
	'>='           reduce using rule 39
	'=='           reduce using rule 39
	'!='           reduce using rule 39
	'&&'           reduce using rule 39
	'||'           reduce using rule 39
	'/'            reduce using rule 39
	'*'            reduce using rule 39
	'-'            reduce using rule 39
	'%'            reduce using rule 39
	cons           reduce using rule 39


State 64

	Exp2 -> '(' Expression . ')'                        (rule 47)

	')'            shift, and enter state 108


State 65

	Expression -> Type . var                            (rule 15)
	Type -> Type . '->' Type                            (rule 63)
	Type -> '(' Type . ')'                              (rule 64)

	')'            shift, and enter state 107
	var            shift, and enter state 70
	'->'           shift, and enter state 71


State 66

	Type -> '[' Type . ']'                              (rule 62)
	Type -> Type . '->' Type                            (rule 63)

	']'            shift, and enter state 106
	'->'           shift, and enter state 71


State 67

	Type -> '[' . Type ']'                              (rule 62)

	'['            shift, and enter state 67
	'('            shift, and enter state 69
	intT           shift, and enter state 13
	boolT          shift, and enter state 15
	void           shift, and enter state 16
	unit           shift, and enter state 25

	Type           goto state 66

State 68

	Exp2 -> '[' ']' .                                   (rule 51)

	'+'            reduce using rule 51
	'['            reduce using rule 51
	'('            reduce using rule 51
	')'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'>'            reduce using rule 51
	'<='           reduce using rule 51
	'>='           reduce using rule 51
	'=='           reduce using rule 51
	'!='           reduce using rule 51
	'&&'           reduce using rule 51
	'||'           reduce using rule 51
	'/'            reduce using rule 51
	'*'            reduce using rule 51
	'-'            reduce using rule 51
	'%'            reduce using rule 51
	number         reduce using rule 51
	bool           reduce using rule 51
	var            reduce using rule 51
	cons           reduce using rule 51
	unit           reduce using rule 51


State 69

	Type -> '(' . Type ')'                              (rule 64)

	'['            shift, and enter state 67
	'('            shift, and enter state 69
	intT           shift, and enter state 13
	boolT          shift, and enter state 15
	void           shift, and enter state 16
	unit           shift, and enter state 25

	Type           goto state 105

State 70

	Expression -> Type var .                            (rule 15)

	')'            reduce using rule 15
	';'            reduce using rule 15


State 71

	Type -> Type '->' . Type                            (rule 63)

	'['            shift, and enter state 67
	'('            shift, and enter state 69
	intT           shift, and enter state 13
	boolT          shift, and enter state 15
	void           shift, and enter state 16
	unit           shift, and enter state 25

	Type           goto state 104

State 72

	Exp1 -> Exp1 Exp2 .                                 (rule 44)

	'+'            reduce using rule 44
	'['            reduce using rule 44
	'('            reduce using rule 44
	')'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'>'            reduce using rule 44
	'<='           reduce using rule 44
	'>='           reduce using rule 44
	'=='           reduce using rule 44
	'!='           reduce using rule 44
	'&&'           reduce using rule 44
	'||'           reduce using rule 44
	'/'            reduce using rule 44
	'*'            reduce using rule 44
	'-'            reduce using rule 44
	'%'            reduce using rule 44
	number         reduce using rule 44
	bool           reduce using rule 44
	var            reduce using rule 44
	cons           reduce using rule 44
	unit           reduce using rule 44


State 73

	Exp1 -> Exp1 unit .                                 (rule 45)

	'+'            reduce using rule 45
	'['            reduce using rule 45
	'('            reduce using rule 45
	')'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'>'            reduce using rule 45
	'<='           reduce using rule 45
	'>='           reduce using rule 45
	'=='           reduce using rule 45
	'!='           reduce using rule 45
	'&&'           reduce using rule 45
	'||'           reduce using rule 45
	'/'            reduce using rule 45
	'*'            reduce using rule 45
	'-'            reduce using rule 45
	'%'            reduce using rule 45
	number         reduce using rule 45
	bool           reduce using rule 45
	var            reduce using rule 45
	cons           reduce using rule 45
	unit           reduce using rule 45


State 74

	Operation -> Operation '+' . Operation              (rule 24)

	'['            shift, and enter state 48
	'('            shift, and enter state 49
	'!'            shift, and enter state 9
	'-'            shift, and enter state 10
	number         shift, and enter state 12
	bool           shift, and enter state 14
	var            shift, and enter state 50
	head           shift, and enter state 19
	tail           shift, and enter state 20
	isEmpty        shift, and enter state 21

	Operation      goto state 103
	Exp1           goto state 4
	Exp2           goto state 5

State 75

	Operation -> Operation '<' . Operation              (rule 26)

	'['            shift, and enter state 48
	'('            shift, and enter state 49
	'!'            shift, and enter state 9
	'-'            shift, and enter state 10
	number         shift, and enter state 12
	bool           shift, and enter state 14
	var            shift, and enter state 50
	head           shift, and enter state 19
	tail           shift, and enter state 20
	isEmpty        shift, and enter state 21

	Operation      goto state 102
	Exp1           goto state 4
	Exp2           goto state 5

State 76

	Operation -> Operation '>' . Operation              (rule 28)

	'['            shift, and enter state 48
	'('            shift, and enter state 49
	'!'            shift, and enter state 9
	'-'            shift, and enter state 10
	number         shift, and enter state 12
	bool           shift, and enter state 14
	var            shift, and enter state 50
	head           shift, and enter state 19
	tail           shift, and enter state 20
	isEmpty        shift, and enter state 21

	Operation      goto state 101
	Exp1           goto state 4
	Exp2           goto state 5

State 77

	Operation -> Operation '<=' . Operation             (rule 27)

	'['            shift, and enter state 48
	'('            shift, and enter state 49
	'!'            shift, and enter state 9
	'-'            shift, and enter state 10
	number         shift, and enter state 12
	bool           shift, and enter state 14
	var            shift, and enter state 50
	head           shift, and enter state 19
	tail           shift, and enter state 20
	isEmpty        shift, and enter state 21

	Operation      goto state 100
	Exp1           goto state 4
	Exp2           goto state 5

State 78

	Operation -> Operation '>=' . Operation             (rule 29)

	'['            shift, and enter state 48
	'('            shift, and enter state 49
	'!'            shift, and enter state 9
	'-'            shift, and enter state 10
	number         shift, and enter state 12
	bool           shift, and enter state 14
	var            shift, and enter state 50
	head           shift, and enter state 19
	tail           shift, and enter state 20
	isEmpty        shift, and enter state 21

	Operation      goto state 99
	Exp1           goto state 4
	Exp2           goto state 5

State 79

	Operation -> Operation '==' . Operation             (rule 33)

	'['            shift, and enter state 48
	'('            shift, and enter state 49
	'!'            shift, and enter state 9
	'-'            shift, and enter state 10
	number         shift, and enter state 12
	bool           shift, and enter state 14
	var            shift, and enter state 50
	head           shift, and enter state 19
	tail           shift, and enter state 20
	isEmpty        shift, and enter state 21

	Operation      goto state 98
	Exp1           goto state 4
	Exp2           goto state 5

State 80

	Operation -> Operation '!=' . Operation             (rule 34)

	'['            shift, and enter state 48
	'('            shift, and enter state 49
	'!'            shift, and enter state 9
	'-'            shift, and enter state 10
	number         shift, and enter state 12
	bool           shift, and enter state 14
	var            shift, and enter state 50
	head           shift, and enter state 19
	tail           shift, and enter state 20
	isEmpty        shift, and enter state 21

	Operation      goto state 97
	Exp1           goto state 4
	Exp2           goto state 5

State 81

	Operation -> Operation '&&' . Operation             (rule 36)

	'['            shift, and enter state 48
	'('            shift, and enter state 49
	'!'            shift, and enter state 9
	'-'            shift, and enter state 10
	number         shift, and enter state 12
	bool           shift, and enter state 14
	var            shift, and enter state 50
	head           shift, and enter state 19
	tail           shift, and enter state 20
	isEmpty        shift, and enter state 21

	Operation      goto state 96
	Exp1           goto state 4
	Exp2           goto state 5

State 82

	Operation -> Operation '||' . Operation             (rule 35)

	'['            shift, and enter state 48
	'('            shift, and enter state 49
	'!'            shift, and enter state 9
	'-'            shift, and enter state 10
	number         shift, and enter state 12
	bool           shift, and enter state 14
	var            shift, and enter state 50
	head           shift, and enter state 19
	tail           shift, and enter state 20
	isEmpty        shift, and enter state 21

	Operation      goto state 95
	Exp1           goto state 4
	Exp2           goto state 5

State 83

	Operation -> Operation '/' . Operation              (rule 32)

	'['            shift, and enter state 48
	'('            shift, and enter state 49
	'!'            shift, and enter state 9
	'-'            shift, and enter state 10
	number         shift, and enter state 12
	bool           shift, and enter state 14
	var            shift, and enter state 50
	head           shift, and enter state 19
	tail           shift, and enter state 20
	isEmpty        shift, and enter state 21

	Operation      goto state 94
	Exp1           goto state 4
	Exp2           goto state 5

State 84

	Operation -> Operation '*' . Operation              (rule 30)

	'['            shift, and enter state 48
	'('            shift, and enter state 49
	'!'            shift, and enter state 9
	'-'            shift, and enter state 10
	number         shift, and enter state 12
	bool           shift, and enter state 14
	var            shift, and enter state 50
	head           shift, and enter state 19
	tail           shift, and enter state 20
	isEmpty        shift, and enter state 21

	Operation      goto state 93
	Exp1           goto state 4
	Exp2           goto state 5

State 85

	Operation -> Operation '-' . Operation              (rule 25)

	'['            shift, and enter state 48
	'('            shift, and enter state 49
	'!'            shift, and enter state 9
	'-'            shift, and enter state 10
	number         shift, and enter state 12
	bool           shift, and enter state 14
	var            shift, and enter state 50
	head           shift, and enter state 19
	tail           shift, and enter state 20
	isEmpty        shift, and enter state 21

	Operation      goto state 92
	Exp1           goto state 4
	Exp2           goto state 5

State 86

	Operation -> Operation '%' . Operation              (rule 31)

	'['            shift, and enter state 48
	'('            shift, and enter state 49
	'!'            shift, and enter state 9
	'-'            shift, and enter state 10
	number         shift, and enter state 12
	bool           shift, and enter state 14
	var            shift, and enter state 50
	head           shift, and enter state 19
	tail           shift, and enter state 20
	isEmpty        shift, and enter state 21

	Operation      goto state 91
	Exp1           goto state 4
	Exp2           goto state 5

State 87

	Operation -> Operation cons . Operation             (rule 37)

	'['            shift, and enter state 48
	'('            shift, and enter state 49
	'!'            shift, and enter state 9
	'-'            shift, and enter state 10
	number         shift, and enter state 12
	bool           shift, and enter state 14
	var            shift, and enter state 50
	head           shift, and enter state 19
	tail           shift, and enter state 20
	isEmpty        shift, and enter state 21

	Operation      goto state 90
	Exp1           goto state 4
	Exp2           goto state 5

State 88

	Stmt -> Expression ';' . Stmt                       (rule 1)

	if             shift, and enter state 31
	while          shift, and enter state 32
	'['            shift, and enter state 7
	'('            shift, and enter state 8
	'!'            shift, and enter state 9
	'-'            shift, and enter state 10
	try            shift, and enter state 33
	throw          shift, and enter state 11
	number         shift, and enter state 12
	intT           shift, and enter state 13
	bool           shift, and enter state 14
	boolT          shift, and enter state 15
	void           shift, and enter state 16
	var            shift, and enter state 17
	print          shift, and enter state 18
	head           shift, and enter state 19
	tail           shift, and enter state 20
	isEmpty        shift, and enter state 21
	consume        shift, and enter state 22
	streams        shift, and enter state 23
	lambda         shift, and enter state 24
	unit           shift, and enter state 25
	return         shift, and enter state 26

	Stmt           goto state 89
	Selection_Stmt goto state 28
	Iteration_Stmt goto state 29
	Expression     goto state 30
	Operation      goto state 3
	Exp1           goto state 4
	Exp2           goto state 5
	Type           goto state 6

State 89

	Stmt -> Expression ';' Stmt .                       (rule 1)

	'}'            reduce using rule 1
	%eof           reduce using rule 1


State 90

	Operation -> Operation . '+' Operation              (rule 24)
	Operation -> Operation . '-' Operation              (rule 25)
	Operation -> Operation . '<' Operation              (rule 26)
	Operation -> Operation . '<=' Operation             (rule 27)
	Operation -> Operation . '>' Operation              (rule 28)
	Operation -> Operation . '>=' Operation             (rule 29)
	Operation -> Operation . '*' Operation              (rule 30)
	Operation -> Operation . '%' Operation              (rule 31)
	Operation -> Operation . '/' Operation              (rule 32)
	Operation -> Operation . '==' Operation             (rule 33)
	Operation -> Operation . '!=' Operation             (rule 34)
	Operation -> Operation . '||' Operation             (rule 35)
	Operation -> Operation . '&&' Operation             (rule 36)
	Operation -> Operation . cons Operation             (rule 37)
	Operation -> Operation cons Operation .             (rule 37)

	'+'            reduce using rule 37
	')'            reduce using rule 37
	';'            reduce using rule 37
	'<'            reduce using rule 37
	'>'            reduce using rule 37
	'<='           reduce using rule 37
	'>='           reduce using rule 37
	'=='           reduce using rule 37
	'!='           reduce using rule 37
	'&&'           reduce using rule 37
	'||'           reduce using rule 37
	'/'            shift, and enter state 83
	'*'            shift, and enter state 84
	'-'            reduce using rule 37
	'%'            shift, and enter state 86
	cons           reduce using rule 37


State 91

	Operation -> Operation . '+' Operation              (rule 24)
	Operation -> Operation . '-' Operation              (rule 25)
	Operation -> Operation . '<' Operation              (rule 26)
	Operation -> Operation . '<=' Operation             (rule 27)
	Operation -> Operation . '>' Operation              (rule 28)
	Operation -> Operation . '>=' Operation             (rule 29)
	Operation -> Operation . '*' Operation              (rule 30)
	Operation -> Operation . '%' Operation              (rule 31)
	Operation -> Operation '%' Operation .              (rule 31)
	Operation -> Operation . '/' Operation              (rule 32)
	Operation -> Operation . '==' Operation             (rule 33)
	Operation -> Operation . '!=' Operation             (rule 34)
	Operation -> Operation . '||' Operation             (rule 35)
	Operation -> Operation . '&&' Operation             (rule 36)
	Operation -> Operation . cons Operation             (rule 37)

	'+'            reduce using rule 31
	')'            reduce using rule 31
	';'            reduce using rule 31
	'<'            reduce using rule 31
	'>'            reduce using rule 31
	'<='           reduce using rule 31
	'>='           reduce using rule 31
	'=='           reduce using rule 31
	'!='           reduce using rule 31
	'&&'           reduce using rule 31
	'||'           reduce using rule 31
	'/'            shift, and enter state 83
	'*'            shift, and enter state 84
	'-'            reduce using rule 31
	'%'            shift, and enter state 86
	cons           reduce using rule 31


State 92

	Operation -> Operation . '+' Operation              (rule 24)
	Operation -> Operation . '-' Operation              (rule 25)
	Operation -> Operation '-' Operation .              (rule 25)
	Operation -> Operation . '<' Operation              (rule 26)
	Operation -> Operation . '<=' Operation             (rule 27)
	Operation -> Operation . '>' Operation              (rule 28)
	Operation -> Operation . '>=' Operation             (rule 29)
	Operation -> Operation . '*' Operation              (rule 30)
	Operation -> Operation . '%' Operation              (rule 31)
	Operation -> Operation . '/' Operation              (rule 32)
	Operation -> Operation . '==' Operation             (rule 33)
	Operation -> Operation . '!=' Operation             (rule 34)
	Operation -> Operation . '||' Operation             (rule 35)
	Operation -> Operation . '&&' Operation             (rule 36)
	Operation -> Operation . cons Operation             (rule 37)

	'+'            reduce using rule 25
	')'            reduce using rule 25
	';'            reduce using rule 25
	'<'            reduce using rule 25
	'>'            reduce using rule 25
	'<='           reduce using rule 25
	'>='           reduce using rule 25
	'=='           reduce using rule 25
	'!='           reduce using rule 25
	'&&'           reduce using rule 25
	'||'           reduce using rule 25
	'/'            shift, and enter state 83
	'*'            shift, and enter state 84
	'-'            reduce using rule 25
	'%'            shift, and enter state 86
	cons           reduce using rule 25


State 93

	Operation -> Operation . '+' Operation              (rule 24)
	Operation -> Operation . '-' Operation              (rule 25)
	Operation -> Operation . '<' Operation              (rule 26)
	Operation -> Operation . '<=' Operation             (rule 27)
	Operation -> Operation . '>' Operation              (rule 28)
	Operation -> Operation . '>=' Operation             (rule 29)
	Operation -> Operation . '*' Operation              (rule 30)
	Operation -> Operation '*' Operation .              (rule 30)
	Operation -> Operation . '%' Operation              (rule 31)
	Operation -> Operation . '/' Operation              (rule 32)
	Operation -> Operation . '==' Operation             (rule 33)
	Operation -> Operation . '!=' Operation             (rule 34)
	Operation -> Operation . '||' Operation             (rule 35)
	Operation -> Operation . '&&' Operation             (rule 36)
	Operation -> Operation . cons Operation             (rule 37)

	'+'            reduce using rule 30
	')'            reduce using rule 30
	';'            reduce using rule 30
	'<'            reduce using rule 30
	'>'            reduce using rule 30
	'<='           reduce using rule 30
	'>='           reduce using rule 30
	'=='           reduce using rule 30
	'!='           reduce using rule 30
	'&&'           reduce using rule 30
	'||'           reduce using rule 30
	'/'            shift, and enter state 83
	'*'            shift, and enter state 84
	'-'            reduce using rule 30
	'%'            shift, and enter state 86
	cons           reduce using rule 30


State 94

	Operation -> Operation . '+' Operation              (rule 24)
	Operation -> Operation . '-' Operation              (rule 25)
	Operation -> Operation . '<' Operation              (rule 26)
	Operation -> Operation . '<=' Operation             (rule 27)
	Operation -> Operation . '>' Operation              (rule 28)
	Operation -> Operation . '>=' Operation             (rule 29)
	Operation -> Operation . '*' Operation              (rule 30)
	Operation -> Operation . '%' Operation              (rule 31)
	Operation -> Operation . '/' Operation              (rule 32)
	Operation -> Operation '/' Operation .              (rule 32)
	Operation -> Operation . '==' Operation             (rule 33)
	Operation -> Operation . '!=' Operation             (rule 34)
	Operation -> Operation . '||' Operation             (rule 35)
	Operation -> Operation . '&&' Operation             (rule 36)
	Operation -> Operation . cons Operation             (rule 37)

	'+'            reduce using rule 32
	')'            reduce using rule 32
	';'            reduce using rule 32
	'<'            reduce using rule 32
	'>'            reduce using rule 32
	'<='           reduce using rule 32
	'>='           reduce using rule 32
	'=='           reduce using rule 32
	'!='           reduce using rule 32
	'&&'           reduce using rule 32
	'||'           reduce using rule 32
	'/'            shift, and enter state 83
	'*'            shift, and enter state 84
	'-'            reduce using rule 32
	'%'            shift, and enter state 86
	cons           reduce using rule 32


State 95

	Operation -> Operation . '+' Operation              (rule 24)
	Operation -> Operation . '-' Operation              (rule 25)
	Operation -> Operation . '<' Operation              (rule 26)
	Operation -> Operation . '<=' Operation             (rule 27)
	Operation -> Operation . '>' Operation              (rule 28)
	Operation -> Operation . '>=' Operation             (rule 29)
	Operation -> Operation . '*' Operation              (rule 30)
	Operation -> Operation . '%' Operation              (rule 31)
	Operation -> Operation . '/' Operation              (rule 32)
	Operation -> Operation . '==' Operation             (rule 33)
	Operation -> Operation . '!=' Operation             (rule 34)
	Operation -> Operation . '||' Operation             (rule 35)
	Operation -> Operation '||' Operation .             (rule 35)
	Operation -> Operation . '&&' Operation             (rule 36)
	Operation -> Operation . cons Operation             (rule 37)

	'+'            reduce using rule 35
	')'            reduce using rule 35
	';'            reduce using rule 35
	'<'            reduce using rule 35
	'>'            reduce using rule 35
	'<='           reduce using rule 35
	'>='           reduce using rule 35
	'=='           reduce using rule 35
	'!='           reduce using rule 35
	'&&'           reduce using rule 35
	'||'           reduce using rule 35
	'/'            shift, and enter state 83
	'*'            shift, and enter state 84
	'-'            reduce using rule 35
	'%'            shift, and enter state 86
	cons           reduce using rule 35


State 96

	Operation -> Operation . '+' Operation              (rule 24)
	Operation -> Operation . '-' Operation              (rule 25)
	Operation -> Operation . '<' Operation              (rule 26)
	Operation -> Operation . '<=' Operation             (rule 27)
	Operation -> Operation . '>' Operation              (rule 28)
	Operation -> Operation . '>=' Operation             (rule 29)
	Operation -> Operation . '*' Operation              (rule 30)
	Operation -> Operation . '%' Operation              (rule 31)
	Operation -> Operation . '/' Operation              (rule 32)
	Operation -> Operation . '==' Operation             (rule 33)
	Operation -> Operation . '!=' Operation             (rule 34)
	Operation -> Operation . '||' Operation             (rule 35)
	Operation -> Operation . '&&' Operation             (rule 36)
	Operation -> Operation '&&' Operation .             (rule 36)
	Operation -> Operation . cons Operation             (rule 37)

	'+'            reduce using rule 36
	')'            reduce using rule 36
	';'            reduce using rule 36
	'<'            reduce using rule 36
	'>'            reduce using rule 36
	'<='           reduce using rule 36
	'>='           reduce using rule 36
	'=='           reduce using rule 36
	'!='           reduce using rule 36
	'&&'           reduce using rule 36
	'||'           reduce using rule 36
	'/'            shift, and enter state 83
	'*'            shift, and enter state 84
	'-'            reduce using rule 36
	'%'            shift, and enter state 86
	cons           reduce using rule 36


State 97

	Operation -> Operation . '+' Operation              (rule 24)
	Operation -> Operation . '-' Operation              (rule 25)
	Operation -> Operation . '<' Operation              (rule 26)
	Operation -> Operation . '<=' Operation             (rule 27)
	Operation -> Operation . '>' Operation              (rule 28)
	Operation -> Operation . '>=' Operation             (rule 29)
	Operation -> Operation . '*' Operation              (rule 30)
	Operation -> Operation . '%' Operation              (rule 31)
	Operation -> Operation . '/' Operation              (rule 32)
	Operation -> Operation . '==' Operation             (rule 33)
	Operation -> Operation . '!=' Operation             (rule 34)
	Operation -> Operation '!=' Operation .             (rule 34)
	Operation -> Operation . '||' Operation             (rule 35)
	Operation -> Operation . '&&' Operation             (rule 36)
	Operation -> Operation . cons Operation             (rule 37)

	'+'            shift, and enter state 74
	')'            reduce using rule 34
	';'            reduce using rule 34
	'<'            fail
	'>'            fail
	'<='           fail
	'>='           fail
	'=='           fail
	'!='           fail
	'&&'           shift, and enter state 81
	'||'           shift, and enter state 82
	'/'            shift, and enter state 83
	'*'            shift, and enter state 84
	'-'            shift, and enter state 85
	'%'            shift, and enter state 86
	cons           shift, and enter state 87


State 98

	Operation -> Operation . '+' Operation              (rule 24)
	Operation -> Operation . '-' Operation              (rule 25)
	Operation -> Operation . '<' Operation              (rule 26)
	Operation -> Operation . '<=' Operation             (rule 27)
	Operation -> Operation . '>' Operation              (rule 28)
	Operation -> Operation . '>=' Operation             (rule 29)
	Operation -> Operation . '*' Operation              (rule 30)
	Operation -> Operation . '%' Operation              (rule 31)
	Operation -> Operation . '/' Operation              (rule 32)
	Operation -> Operation . '==' Operation             (rule 33)
	Operation -> Operation '==' Operation .             (rule 33)
	Operation -> Operation . '!=' Operation             (rule 34)
	Operation -> Operation . '||' Operation             (rule 35)
	Operation -> Operation . '&&' Operation             (rule 36)
	Operation -> Operation . cons Operation             (rule 37)

	'+'            shift, and enter state 74
	')'            reduce using rule 33
	';'            reduce using rule 33
	'<'            fail
	'>'            fail
	'<='           fail
	'>='           fail
	'=='           fail
	'!='           fail
	'&&'           shift, and enter state 81
	'||'           shift, and enter state 82
	'/'            shift, and enter state 83
	'*'            shift, and enter state 84
	'-'            shift, and enter state 85
	'%'            shift, and enter state 86
	cons           shift, and enter state 87


State 99

	Operation -> Operation . '+' Operation              (rule 24)
	Operation -> Operation . '-' Operation              (rule 25)
	Operation -> Operation . '<' Operation              (rule 26)
	Operation -> Operation . '<=' Operation             (rule 27)
	Operation -> Operation . '>' Operation              (rule 28)
	Operation -> Operation . '>=' Operation             (rule 29)
	Operation -> Operation '>=' Operation .             (rule 29)
	Operation -> Operation . '*' Operation              (rule 30)
	Operation -> Operation . '%' Operation              (rule 31)
	Operation -> Operation . '/' Operation              (rule 32)
	Operation -> Operation . '==' Operation             (rule 33)
	Operation -> Operation . '!=' Operation             (rule 34)
	Operation -> Operation . '||' Operation             (rule 35)
	Operation -> Operation . '&&' Operation             (rule 36)
	Operation -> Operation . cons Operation             (rule 37)

	'+'            shift, and enter state 74
	')'            reduce using rule 29
	';'            reduce using rule 29
	'<'            fail
	'>'            fail
	'<='           fail
	'>='           fail
	'=='           fail
	'!='           fail
	'&&'           shift, and enter state 81
	'||'           shift, and enter state 82
	'/'            shift, and enter state 83
	'*'            shift, and enter state 84
	'-'            shift, and enter state 85
	'%'            shift, and enter state 86
	cons           shift, and enter state 87


State 100

	Operation -> Operation . '+' Operation              (rule 24)
	Operation -> Operation . '-' Operation              (rule 25)
	Operation -> Operation . '<' Operation              (rule 26)
	Operation -> Operation . '<=' Operation             (rule 27)
	Operation -> Operation '<=' Operation .             (rule 27)
	Operation -> Operation . '>' Operation              (rule 28)
	Operation -> Operation . '>=' Operation             (rule 29)
	Operation -> Operation . '*' Operation              (rule 30)
	Operation -> Operation . '%' Operation              (rule 31)
	Operation -> Operation . '/' Operation              (rule 32)
	Operation -> Operation . '==' Operation             (rule 33)
	Operation -> Operation . '!=' Operation             (rule 34)
	Operation -> Operation . '||' Operation             (rule 35)
	Operation -> Operation . '&&' Operation             (rule 36)
	Operation -> Operation . cons Operation             (rule 37)

	'+'            shift, and enter state 74
	')'            reduce using rule 27
	';'            reduce using rule 27
	'<'            fail
	'>'            fail
	'<='           fail
	'>='           fail
	'=='           fail
	'!='           fail
	'&&'           shift, and enter state 81
	'||'           shift, and enter state 82
	'/'            shift, and enter state 83
	'*'            shift, and enter state 84
	'-'            shift, and enter state 85
	'%'            shift, and enter state 86
	cons           shift, and enter state 87


State 101

	Operation -> Operation . '+' Operation              (rule 24)
	Operation -> Operation . '-' Operation              (rule 25)
	Operation -> Operation . '<' Operation              (rule 26)
	Operation -> Operation . '<=' Operation             (rule 27)
	Operation -> Operation . '>' Operation              (rule 28)
	Operation -> Operation '>' Operation .              (rule 28)
	Operation -> Operation . '>=' Operation             (rule 29)
	Operation -> Operation . '*' Operation              (rule 30)
	Operation -> Operation . '%' Operation              (rule 31)
	Operation -> Operation . '/' Operation              (rule 32)
	Operation -> Operation . '==' Operation             (rule 33)
	Operation -> Operation . '!=' Operation             (rule 34)
	Operation -> Operation . '||' Operation             (rule 35)
	Operation -> Operation . '&&' Operation             (rule 36)
	Operation -> Operation . cons Operation             (rule 37)

	'+'            shift, and enter state 74
	')'            reduce using rule 28
	';'            reduce using rule 28
	'<'            fail
	'>'            fail
	'<='           fail
	'>='           fail
	'=='           fail
	'!='           fail
	'&&'           shift, and enter state 81
	'||'           shift, and enter state 82
	'/'            shift, and enter state 83
	'*'            shift, and enter state 84
	'-'            shift, and enter state 85
	'%'            shift, and enter state 86
	cons           shift, and enter state 87


State 102

	Operation -> Operation . '+' Operation              (rule 24)
	Operation -> Operation . '-' Operation              (rule 25)
	Operation -> Operation . '<' Operation              (rule 26)
	Operation -> Operation '<' Operation .              (rule 26)
	Operation -> Operation . '<=' Operation             (rule 27)
	Operation -> Operation . '>' Operation              (rule 28)
	Operation -> Operation . '>=' Operation             (rule 29)
	Operation -> Operation . '*' Operation              (rule 30)
	Operation -> Operation . '%' Operation              (rule 31)
	Operation -> Operation . '/' Operation              (rule 32)
	Operation -> Operation . '==' Operation             (rule 33)
	Operation -> Operation . '!=' Operation             (rule 34)
	Operation -> Operation . '||' Operation             (rule 35)
	Operation -> Operation . '&&' Operation             (rule 36)
	Operation -> Operation . cons Operation             (rule 37)

	'+'            shift, and enter state 74
	')'            reduce using rule 26
	';'            reduce using rule 26
	'<'            fail
	'>'            fail
	'<='           fail
	'>='           fail
	'=='           fail
	'!='           fail
	'&&'           shift, and enter state 81
	'||'           shift, and enter state 82
	'/'            shift, and enter state 83
	'*'            shift, and enter state 84
	'-'            shift, and enter state 85
	'%'            shift, and enter state 86
	cons           shift, and enter state 87


State 103

	Operation -> Operation . '+' Operation              (rule 24)
	Operation -> Operation '+' Operation .              (rule 24)
	Operation -> Operation . '-' Operation              (rule 25)
	Operation -> Operation . '<' Operation              (rule 26)
	Operation -> Operation . '<=' Operation             (rule 27)
	Operation -> Operation . '>' Operation              (rule 28)
	Operation -> Operation . '>=' Operation             (rule 29)
	Operation -> Operation . '*' Operation              (rule 30)
	Operation -> Operation . '%' Operation              (rule 31)
	Operation -> Operation . '/' Operation              (rule 32)
	Operation -> Operation . '==' Operation             (rule 33)
	Operation -> Operation . '!=' Operation             (rule 34)
	Operation -> Operation . '||' Operation             (rule 35)
	Operation -> Operation . '&&' Operation             (rule 36)
	Operation -> Operation . cons Operation             (rule 37)

	'+'            reduce using rule 24
	')'            reduce using rule 24
	';'            reduce using rule 24
	'<'            reduce using rule 24
	'>'            reduce using rule 24
	'<='           reduce using rule 24
	'>='           reduce using rule 24
	'=='           reduce using rule 24
	'!='           reduce using rule 24
	'&&'           reduce using rule 24
	'||'           reduce using rule 24
	'/'            shift, and enter state 83
	'*'            shift, and enter state 84
	'-'            reduce using rule 24
	'%'            shift, and enter state 86
	cons           reduce using rule 24


State 104

	Type -> Type . '->' Type                            (rule 63)
	Type -> Type '->' Type .                            (rule 63)

	']'            reduce using rule 63
	')'            reduce using rule 63
	var            reduce using rule 63
	'->'           shift, and enter state 71


State 105

	Type -> Type . '->' Type                            (rule 63)
	Type -> '(' Type . ')'                              (rule 64)

	')'            shift, and enter state 107
	'->'           shift, and enter state 71


State 106

	Type -> '[' Type ']' .                              (rule 62)

	']'            reduce using rule 62
	')'            reduce using rule 62
	var            reduce using rule 62
	'->'           reduce using rule 62


State 107

	Type -> '(' Type ')' .                              (rule 64)

	']'            reduce using rule 64
	')'            reduce using rule 64
	var            reduce using rule 64
	'->'           reduce using rule 64


State 108

	Exp2 -> '(' Expression ')' .                        (rule 47)

	'+'            reduce using rule 47
	'['            reduce using rule 47
	'('            reduce using rule 47
	')'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'>'            reduce using rule 47
	'<='           reduce using rule 47
	'>='           reduce using rule 47
	'=='           reduce using rule 47
	'!='           reduce using rule 47
	'&&'           reduce using rule 47
	'||'           reduce using rule 47
	'/'            reduce using rule 47
	'*'            reduce using rule 47
	'-'            reduce using rule 47
	'%'            reduce using rule 47
	number         reduce using rule 47
	bool           reduce using rule 47
	var            reduce using rule 47
	cons           reduce using rule 47
	unit           reduce using rule 47


State 109

	Expression -> var '=' Expression .                  (rule 13)

	')'            reduce using rule 13
	';'            reduce using rule 13


State 110

	Expression -> var '=' unit .                        (rule 14)
	Type -> unit .                                      (rule 61)

	')'            reduce using rule 14
	';'            reduce using rule 14
	var            reduce using rule 61
	'->'           reduce using rule 61


State 111

	Expression -> lambda unit '->' . Compound_Stmt      (rule 23)

	'{'            shift, and enter state 35

	Compound_Stmt  goto state 122

State 112

	Expression -> lambda '(' Type . var ')' '->' Compound_Stmt    (rule 22)
	Type -> Type . '->' Type                            (rule 63)

	var            shift, and enter state 121
	'->'           shift, and enter state 71


State 113

	Selection_Stmt -> if '(' Expression . ')' Compound_Stmt else Compound_Stmt    (rule 7)
	Selection_Stmt -> if '(' Expression . ')' Compound_Stmt    (rule 8)

	')'            shift, and enter state 120


State 114

	Iteration_Stmt -> while '(' Expression . ')' Compound_Stmt    (rule 10)

	')'            shift, and enter state 119


State 115

	Compound_Stmt -> '{' Stmt . '}'                     (rule 11)

	'}'            shift, and enter state 118


State 116

	Selection_Stmt -> try Compound_Stmt catch . '(' Exception ')' Compound_Stmt    (rule 9)

	'('            shift, and enter state 117


State 117

	Selection_Stmt -> try Compound_Stmt catch '(' . Exception ')' Compound_Stmt    (rule 9)

	NullPointerExceptionshift, and enter state 56
	StreamsNotInitialisedExceptionshift, and enter state 57
	NotExistingStreamConsumptionExceptionshift, and enter state 58
	DivideByZeroExceptionshift, and enter state 59
	TrapException  shift, and enter state 60
	ListEmptyExceptionshift, and enter state 61

	Exception      goto state 126

State 118

	Compound_Stmt -> '{' Stmt '}' .                     (rule 11)

	if             reduce using rule 11
	while          reduce using rule 11
	else           reduce using rule 11
	'}'            reduce using rule 11
	'['            reduce using rule 11
	'('            reduce using rule 11
	')'            reduce using rule 11
	';'            reduce using rule 11
	'!'            reduce using rule 11
	'-'            reduce using rule 11
	catch          reduce using rule 11
	try            reduce using rule 11
	throw          reduce using rule 11
	number         reduce using rule 11
	intT           reduce using rule 11
	bool           reduce using rule 11
	boolT          reduce using rule 11
	void           reduce using rule 11
	var            reduce using rule 11
	print          reduce using rule 11
	head           reduce using rule 11
	tail           reduce using rule 11
	isEmpty        reduce using rule 11
	consume        reduce using rule 11
	streams        reduce using rule 11
	lambda         reduce using rule 11
	unit           reduce using rule 11
	return         reduce using rule 11
	%eof           reduce using rule 11


State 119

	Iteration_Stmt -> while '(' Expression ')' . Compound_Stmt    (rule 10)

	'{'            shift, and enter state 35

	Compound_Stmt  goto state 125

State 120

	Selection_Stmt -> if '(' Expression ')' . Compound_Stmt else Compound_Stmt    (rule 7)
	Selection_Stmt -> if '(' Expression ')' . Compound_Stmt    (rule 8)

	'{'            shift, and enter state 35

	Compound_Stmt  goto state 124

State 121

	Expression -> lambda '(' Type var . ')' '->' Compound_Stmt    (rule 22)

	')'            shift, and enter state 123


State 122

	Expression -> lambda unit '->' Compound_Stmt .      (rule 23)

	')'            reduce using rule 23
	';'            reduce using rule 23


State 123

	Expression -> lambda '(' Type var ')' . '->' Compound_Stmt    (rule 22)

	'->'           shift, and enter state 129


State 124

	Selection_Stmt -> if '(' Expression ')' Compound_Stmt . else Compound_Stmt    (rule 7)
	Selection_Stmt -> if '(' Expression ')' Compound_Stmt .    (rule 8)

	if             reduce using rule 8
	while          reduce using rule 8
	else           shift, and enter state 128
	'}'            reduce using rule 8
	'['            reduce using rule 8
	'('            reduce using rule 8
	'!'            reduce using rule 8
	'-'            reduce using rule 8
	try            reduce using rule 8
	throw          reduce using rule 8
	number         reduce using rule 8
	intT           reduce using rule 8
	bool           reduce using rule 8
	boolT          reduce using rule 8
	void           reduce using rule 8
	var            reduce using rule 8
	print          reduce using rule 8
	head           reduce using rule 8
	tail           reduce using rule 8
	isEmpty        reduce using rule 8
	consume        reduce using rule 8
	streams        reduce using rule 8
	lambda         reduce using rule 8
	unit           reduce using rule 8
	return         reduce using rule 8
	%eof           reduce using rule 8


State 125

	Iteration_Stmt -> while '(' Expression ')' Compound_Stmt .    (rule 10)

	if             reduce using rule 10
	while          reduce using rule 10
	'}'            reduce using rule 10
	'['            reduce using rule 10
	'('            reduce using rule 10
	'!'            reduce using rule 10
	'-'            reduce using rule 10
	try            reduce using rule 10
	throw          reduce using rule 10
	number         reduce using rule 10
	intT           reduce using rule 10
	bool           reduce using rule 10
	boolT          reduce using rule 10
	void           reduce using rule 10
	var            reduce using rule 10
	print          reduce using rule 10
	head           reduce using rule 10
	tail           reduce using rule 10
	isEmpty        reduce using rule 10
	consume        reduce using rule 10
	streams        reduce using rule 10
	lambda         reduce using rule 10
	unit           reduce using rule 10
	return         reduce using rule 10
	%eof           reduce using rule 10


State 126

	Selection_Stmt -> try Compound_Stmt catch '(' Exception . ')' Compound_Stmt    (rule 9)

	')'            shift, and enter state 127


State 127

	Selection_Stmt -> try Compound_Stmt catch '(' Exception ')' . Compound_Stmt    (rule 9)

	'{'            shift, and enter state 35

	Compound_Stmt  goto state 132

State 128

	Selection_Stmt -> if '(' Expression ')' Compound_Stmt else . Compound_Stmt    (rule 7)

	'{'            shift, and enter state 35

	Compound_Stmt  goto state 131

State 129

	Expression -> lambda '(' Type var ')' '->' . Compound_Stmt    (rule 22)

	'{'            shift, and enter state 35

	Compound_Stmt  goto state 130

State 130

	Expression -> lambda '(' Type var ')' '->' Compound_Stmt .    (rule 22)

	')'            reduce using rule 22
	';'            reduce using rule 22


State 131

	Selection_Stmt -> if '(' Expression ')' Compound_Stmt else Compound_Stmt .    (rule 7)

	if             reduce using rule 7
	while          reduce using rule 7
	'}'            reduce using rule 7
	'['            reduce using rule 7
	'('            reduce using rule 7
	'!'            reduce using rule 7
	'-'            reduce using rule 7
	try            reduce using rule 7
	throw          reduce using rule 7
	number         reduce using rule 7
	intT           reduce using rule 7
	bool           reduce using rule 7
	boolT          reduce using rule 7
	void           reduce using rule 7
	var            reduce using rule 7
	print          reduce using rule 7
	head           reduce using rule 7
	tail           reduce using rule 7
	isEmpty        reduce using rule 7
	consume        reduce using rule 7
	streams        reduce using rule 7
	lambda         reduce using rule 7
	unit           reduce using rule 7
	return         reduce using rule 7
	%eof           reduce using rule 7


State 132

	Selection_Stmt -> try Compound_Stmt catch '(' Exception ')' Compound_Stmt .    (rule 9)

	if             reduce using rule 9
	while          reduce using rule 9
	'}'            reduce using rule 9
	'['            reduce using rule 9
	'('            reduce using rule 9
	'!'            reduce using rule 9
	'-'            reduce using rule 9
	try            reduce using rule 9
	throw          reduce using rule 9
	number         reduce using rule 9
	intT           reduce using rule 9
	bool           reduce using rule 9
	boolT          reduce using rule 9
	void           reduce using rule 9
	var            reduce using rule 9
	print          reduce using rule 9
	head           reduce using rule 9
	tail           reduce using rule 9
	isEmpty        reduce using rule 9
	consume        reduce using rule 9
	streams        reduce using rule 9
	lambda         reduce using rule 9
	unit           reduce using rule 9
	return         reduce using rule 9
	%eof           reduce using rule 9


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 65
Number of terminals: 52
Number of non-terminals: 11
Number of states: 133
